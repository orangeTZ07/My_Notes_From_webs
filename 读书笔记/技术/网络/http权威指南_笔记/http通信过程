###下文叙述http/1.1的通信过程
##假设你要在浏览器上搜索 三角洲行动
    1.你的浏览器建立搜索引擎url(假如是谷歌） https://www.google.com.hk/search?q=%E4%B8%89%E8%A7%92%E6%B4%B2%E8%A1%8C%E5%8A%A8&oq=%E4%B8%89%E8%A7%92%E6%B4%B2%E8%A1%8C%E5%8A%A8&gs_lcrp=EgZjaHJvbWUqCggAEAAY4wIYgAQyCggAEAAY4wIYgAQyBwgBEC4YgAQyBwgCEAAYgAQyBwgDEAAYgAQyBwgEEAAYgAQyBwgFEAAYgAQyBwgGEAAYgAQyBwgHEAAYgAQyBwgIEAAYgAQyBwgJEAAYgATSAQg0NTIwajBqN6gCALACAA&sourceid=chrome&ie=UTF-8
       url结构请参考本书第2章 URL与资源开头 |方案类型|三级域名.二级域名.顶级域名|资源路径是search| ?是字符串查询分隔符|q是参数|%用来表示一些编码，一些不好做开发的字符比如中文(详情请搜索），可以用%来编码|后边一大堆就是各种参数了|
       每个url中的路径组件都可以带上参数，比如http://a.b.c:114/a;param=1&param2=2/b;param=2?q=w每个参数与路径字符都用;分隔开，每个路径后附带的多个间参数间用&隔开。域名:后边跟着的是端口号，指定了服务器上运行的软件服务的位置
       总体格式<scheme>://<user>:<password>@<host>:<port>/<path>; <params>? <query>#<frag>，其中frag是用来选取片段的，其用#标识，这会让整个http事务向服务端请求来完整数据后，由浏览器切割数据，选取你frag标识的片段来给你看。
       现代浏览器一般会对你给出的url进行扩展，比如你输入bing.com,会自动扩展为https://www.bing.com，这个扩展链接还会随着你的地理位置不同，而智能匹配合适的url来进行扩展, 比如我的浏览器会把bing.com扩展为https://cn.bing.com

    2.浏览器已经做好了url，开始连入url指定的位置
        浏览器先识别域名，连入DNS服务器，把域名丢给它看。DNS服务器处理后把IP地址丢回来。浏览器再连入这个IP。每次tcp连入都会通过三次握手（SYN,SYN/ACK,ACK）来建立牢固连接，防止丢失数据。每次断连都会有四次挥手（FIN_1,ACK,FIN_2,ACK）详细内容https://chatgpt.com/share/6859fbf9-1950-800d-b3ea-5fd536bfb293
        当tcp连接建立后，tcp程序会对数据进行分段，分成小段后等待发送。
        tcp程序具有一些优化算法，比如「tcp慢启动」，「延迟确认」算法，「nagle」算法。
        tcp慢启动：现在客户端GET了三角洲相关网页，服务端开始发送数据1，客户端发ACK1,服务端此时可发数据2 3，客户端发ACK2 3，服务端发数据4 5 6 7，客户端发ACK4 5 6 7。以此类推呈等比数列。
        延迟确认：你朝谷歌发送了GET请求，那么谷歌可能会先不发对于你GET请求的已接收ACK,而是等一会，要传送html包时尝试把ACK加入到html包里一起发送。
        nagle算法：nagle会尝试阻止过多小包占用带宽，它会阻塞小包，直到小包堆积达到nagle指定的大小，作为一个大包一起发出去。或者nagle在接收到接收方对于其所在端发送的上一个包的ACK时，会立刻发送它目前正在处理的这些包。